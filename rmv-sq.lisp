(defun sect-marker? (line str len)
  (when (and (coerce line 'list) (>= (length line) len))
    (let ((tkn (subseq (string-upcase line) 0 len)))
      (equal str tkn))))

(defun rmv-sol-quiz (from)
  (if (probe-file from)
      (with-open-file (in from)
	(let ((to (ensure-directories-exist
		   (concatenate 'string (directory-namestring from) "slides-handout/" (file-namestring from)))))
	  (with-open-file (out to :direction :output
				  :if-exists :supersede)
	    (let ((cmmt-flag nil)
		  (sol-qz-flag nil))
	      (loop for line = (read-line in nil nil)
		    while line do
		      (format t ".")
		      (cond ((sect-marker? line "#+BEGIN_COMMENT" 15)
			     (setf cmmt-flag t)
			     (format out "~A~%" line))
			    ((sect-marker? line "#+END_COMMENT" 13)
			     (setf cmmt-flag nil)
			     (format out "~A~%" line))
			    (cmmt-flag (format out "~A~%" line))
			    ((or (sect-marker? line "*** SOLUTION" 12)
				 (sect-marker? line "** QUIZ" 7))
			     (setf sol-qz-flag t))
			    ((and sol-qz-flag (sect-marker? line "** " 3))
			     (setf sol-qz-flag nil)
			     (format out "~A~%" line))
			    (sol-qz-flag)
			    (t (format out "~A~%" line))))))))
      (error "File ~s does not exist!" from)))
